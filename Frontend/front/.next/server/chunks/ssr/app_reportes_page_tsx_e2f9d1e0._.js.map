{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/OneDrive%20-%20frt.utn.edu.ar/Facultad/2025/Simulaci%C3%B3n/Avance%202/Soft/Frontend/front/app/reportes/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n} from \"recharts\";\r\n\r\n// Define the MockData type\r\ntype MockData = {\r\n  acumulacionCarpogrados: Array<{\r\n    mes: string;\r\n    tempMin: number;\r\n    tempMax: number;\r\n    carpogradosDiarios: number;\r\n    carpogradosAcumulados: number;\r\n    diasMes: number;\r\n  }>;\r\n  aplicacionInsecticidas: Array<{\r\n    fechaAplicacion: string;\r\n    generacion: string;\r\n    diasAplicados: number;\r\n    reduccionEsperada: number;\r\n    poblacionPreTratamiento: string;\r\n    poblacionPostTratamiento: string;\r\n  }>;\r\n  analisisEconomico: Array<{\r\n    concepto: string;\r\n    costoPorHectarea: number;\r\n    areaTratada: number;\r\n    costoTotal: number;\r\n    isTotal?: boolean;\r\n    isLoss?: boolean;\r\n    isSaving?: boolean;\r\n  }>;\r\n  eficaciaPrograma: Array<{\r\n    metrica: string;\r\n    sinControl: string;\r\n    conControl: string;\r\n    reduccion: string;\r\n  }>;\r\n};\r\n\r\n// Datos simulados para las tablas\r\n// const mockData = {\r\n//   acumulacionCarpogrados: [\r\n//     {\r\n//       mes: \"Agosto\",\r\n//       tempMin: 0.8,\r\n//       tempMax: 16.3,\r\n//       carpogradosDiarios: 8.55,\r\n//       carpogradosAcumulados: 265.05,\r\n//       diasMes: 31,\r\n//     },\r\n//     {\r\n//       mes: \"Septiembre\",\r\n//       tempMin: 3.3,\r\n//       tempMax: 19.4,\r\n//       carpogradosDiarios: 11.35,\r\n//       carpogradosAcumulados: 605.55,\r\n//       diasMes: 30,\r\n//     },\r\n//     {\r\n//       mes: \"Octubre\",\r\n//       tempMin: 6.8,\r\n//       tempMax: 22.8,\r\n//       carpogradosDiarios: 14.8,\r\n//       carpogradosAcumulados: 1064.35,\r\n//       diasMes: 31,\r\n//     },\r\n//     {\r\n//       mes: \"Noviembre\",\r\n//       tempMin: 9.7,\r\n//       tempMax: 26.4,\r\n//       carpogradosDiarios: 18.05,\r\n//       carpogradosAcumulados: 1606.85,\r\n//       diasMes: 30,\r\n//     },\r\n//     {\r\n//       mes: \"Diciembre\",\r\n//       tempMin: 12.3,\r\n//       tempMax: 29.3,\r\n//       carpogradosDiarios: 20.8,\r\n//       carpogradosAcumulados: 2251.65,\r\n//       diasMes: 31,\r\n//     },\r\n//     {\r\n//       mes: \"Enero\",\r\n//       tempMin: 13.4,\r\n//       tempMax: 30.7,\r\n//       carpogradosDiarios: 22.05,\r\n//       carpogradosAcumulados: 2935.2,\r\n//       diasMes: 31,\r\n//     },\r\n//     {\r\n//       mes: \"Febrero\",\r\n//       tempMin: 12.3,\r\n//       tempMax: 29.5,\r\n//       carpogradosDiarios: 20.9,\r\n//       carpogradosAcumulados: 3520.4,\r\n//       diasMes: 28,\r\n//     },\r\n//     {\r\n//       mes: \"Marzo\",\r\n//       tempMin: 9.6,\r\n//       tempMax: 26.3,\r\n//       carpogradosDiarios: 17.95,\r\n//       carpogradosAcumulados: 4076.85,\r\n//       diasMes: 31,\r\n//     },\r\n//   ],\r\n//   aplicacionInsecticidas: [\r\n//     {\r\n//       fechaAplicacion: \"28-29 Agosto\",\r\n//       generacion: \"2ª\",\r\n//       diasAplicados: 2,\r\n//       reduccionEsperada: 99.0,\r\n//       poblacionPreTratamiento: \"2,508 larvas\",\r\n//       poblacionPostTratamiento: \"25 larvas\",\r\n//     },\r\n//     {\r\n//       fechaAplicacion: \"18-19 Septiembre\",\r\n//       generacion: \"2ª\",\r\n//       diasAplicados: 2,\r\n//       reduccionEsperada: 99.0,\r\n//       poblacionPreTratamiento: \"4,092 larvas\",\r\n//       poblacionPostTratamiento: \"41 larvas\",\r\n//     },\r\n//     {\r\n//       fechaAplicacion: \"12-13 Octubre\",\r\n//       generacion: \"3ª\",\r\n//       diasAplicados: 2,\r\n//       reduccionEsperada: 99.0,\r\n//       poblacionPreTratamiento: \"8,398 larvas\",\r\n//       poblacionPostTratamiento: \"84 larvas\",\r\n//     },\r\n//     {\r\n//       fechaAplicacion: \"28-29 Diciembre\",\r\n//       generacion: \"3ª\",\r\n//       diasAplicados: 2,\r\n//       reduccionEsperada: 99.0,\r\n//       poblacionPreTratamiento: \"12,584 larvas\",\r\n//       poblacionPostTratamiento: \"126 larvas\",\r\n//     },\r\n//   ],\r\n//   analisisEconomico: [\r\n//     {\r\n//       concepto: \"Trampas de Confusión (4 unidades)\",\r\n//       costoPorHectarea: 45.0,\r\n//       areaTratada: 12,\r\n//       costoTotal: 540.0,\r\n//     },\r\n//     {\r\n//       concepto: \"Insecticida (8 aplicaciones)\",\r\n//       costoPorHectarea: 28.5,\r\n//       areaTratada: 12,\r\n//       costoTotal: 342.0,\r\n//     },\r\n//     {\r\n//       concepto: \"Mano de obra aplicación\",\r\n//       costoPorHectarea: 15.0,\r\n//       areaTratada: 12,\r\n//       costoTotal: 180.0,\r\n//     },\r\n//     {\r\n//       concepto: \"Monitoreo semanal\",\r\n//       costoPorHectarea: 8.0,\r\n//       areaTratada: 12,\r\n//       costoTotal: 96.0,\r\n//     },\r\n//     {\r\n//       concepto: \"Total Inversión\",\r\n//       costoPorHectarea: 96.5,\r\n//       areaTratada: 12,\r\n//       costoTotal: 1158.0,\r\n//       isTotal: true,\r\n//     },\r\n//     {\r\n//       concepto: \"Pérdida estimada sin control\",\r\n//       costoPorHectarea: 450.0,\r\n//       areaTratada: 12,\r\n//       costoTotal: 5400.0,\r\n//       isLoss: true,\r\n//     },\r\n//     {\r\n//       concepto: \"Ahorro Neto\",\r\n//       costoPorHectarea: 353.5,\r\n//       areaTratada: 12,\r\n//       costoTotal: 4242.0,\r\n//       isSaving: true,\r\n//     },\r\n//   ],\r\n//   eficaciaPrograma: [\r\n//     {\r\n//       metrica: \"Población final de larvas\",\r\n//       sinControl: \"15,843\",\r\n//       conControl: \"276\",\r\n//       reduccion: \"98.3%\",\r\n//     },\r\n//     {\r\n//       metrica: \"Frutos dañados estimados\",\r\n//       sinControl: \"1,267\",\r\n//       conControl: \"22\",\r\n//       reduccion: \"98.3%\",\r\n//     },\r\n//     {\r\n//       metrica: \"Carpogrados críticos superados\",\r\n//       sinControl: \"4\",\r\n//       conControl: \"0\",\r\n//       reduccion: \"100%\",\r\n//     },\r\n//     {\r\n//       metrica: \"Cumplimiento umbral SENASA\",\r\n//       sinControl: \"15%\",\r\n//       conControl: \"85%\",\r\n//       reduccion: \"+70%\",\r\n//     },\r\n//   ],\r\n// };\r\n\r\n// Datos para gráficos\r\nconst chartData = {\r\n  costosPrevencion: [\r\n    { mes: 1, costo: 5 },\r\n    { mes: 10, costo: 12 },\r\n    { mes: 20, costo: 18 },\r\n    { mes: 30, costo: 15 },\r\n  ],\r\n  gradosDias: [\r\n    { fecha: \"22/08\", grados: 8 },\r\n    { fecha: \"23/09\", grados: 16 },\r\n    { fecha: \"24/10\", grados: 12 },\r\n    { fecha: \"25/09\", grados: 18 },\r\n  ],\r\n  poblacionPlagas: [\r\n    { mes: 1, poblacion: 5 },\r\n    { mes: 10, poblacion: 18 },\r\n    { mes: 20, poblacion: 15 },\r\n    { mes: 30, poblacion: 8 },\r\n  ],\r\n  cantidadAtrapada: [\r\n    { trampa: 1, cantidad: 15 },\r\n    { trampa: 2, cantidad: 8 },\r\n    { trampa: 3, cantidad: 12 },\r\n    { trampa: 4, cantidad: 18 },\r\n    { trampa: 5, cantidad: 6 },\r\n    { trampa: 6, cantidad: 14 },\r\n    { trampa: 7, cantidad: 20 },\r\n  ],\r\n};\r\n\r\nconst mockDataStatic = {\r\n  acumulacionCarpogrados: [\r\n    {\r\n      mes: \"Agosto\",\r\n      tempMin: 0.8,\r\n      tempMax: 16.3,\r\n      carpogradosDiarios: 8.55,\r\n      carpogradosAcumulados: 265.05,\r\n      diasMes: 31,\r\n    },\r\n    {\r\n      mes: \"Septiembre\",\r\n      tempMin: 3.3,\r\n      tempMax: 19.4,\r\n      carpogradosDiarios: 11.35,\r\n      carpogradosAcumulados: 605.55,\r\n      diasMes: 30,\r\n    },\r\n    {\r\n      mes: \"Octubre\",\r\n      tempMin: 6.8,\r\n      tempMax: 22.8,\r\n      carpogradosDiarios: 14.8,\r\n      carpogradosAcumulados: 1064.35,\r\n      diasMes: 31,\r\n    },\r\n    {\r\n      mes: \"Noviembre\",\r\n      tempMin: 9.7,\r\n      tempMax: 26.4,\r\n      carpogradosDiarios: 18.05,\r\n      carpogradosAcumulados: 1606.85,\r\n      diasMes: 30,\r\n    },\r\n    {\r\n      mes: \"Diciembre\",\r\n      tempMin: 12.3,\r\n      tempMax: 29.3,\r\n      carpogradosDiarios: 20.8,\r\n      carpogradosAcumulados: 2251.65,\r\n      diasMes: 31,\r\n    },\r\n    {\r\n      mes: \"Enero\",\r\n      tempMin: 13.4,\r\n      tempMax: 30.7,\r\n      carpogradosDiarios: 22.05,\r\n      carpogradosAcumulados: 2935.2,\r\n      diasMes: 31,\r\n    },\r\n    {\r\n      mes: \"Febrero\",\r\n      tempMin: 12.3,\r\n      tempMax: 29.5,\r\n      carpogradosDiarios: 20.9,\r\n      carpogradosAcumulados: 3520.4,\r\n      diasMes: 28,\r\n    },\r\n    {\r\n      mes: \"Marzo\",\r\n      tempMin: 9.6,\r\n      tempMax: 26.3,\r\n      carpogradosDiarios: 17.95,\r\n      carpogradosAcumulados: 4076.85,\r\n      diasMes: 31,\r\n    },\r\n  ],\r\n  aplicacionInsecticidas: [\r\n    {\r\n      fechaAplicacion: \"28-29 Agosto\",\r\n      generacion: \"1ª\",\r\n      diasAplicados: 2,\r\n      reduccionEsperada: 99.0,\r\n      poblacionPreTratamiento: \"2,508 larvas\",\r\n      poblacionPostTratamiento: \"25 larvas\",\r\n    },\r\n    {\r\n      fechaAplicacion: \"18-19 Septiembre\",\r\n      generacion: \"2ª\",\r\n      diasAplicados: 2,\r\n      reduccionEsperada: 99.0,\r\n      poblacionPreTratamiento: \"4,092 larvas\",\r\n      poblacionPostTratamiento: \"41 larvas\",\r\n    },\r\n    {\r\n      fechaAplicacion: \"12-13 Diciembre\",\r\n      generacion: \"3ª\",\r\n      diasAplicados: 2,\r\n      reduccionEsperada: 99.0,\r\n      poblacionPreTratamiento: \"8,398 larvas\",\r\n      poblacionPostTratamiento: \"84 larvas\",\r\n    },\r\n  ],\r\n  analisisEconomico: [\r\n    {\r\n      concepto: \"Trampas de Confusión (4 unidades)\",\r\n      costoPorHectarea: 45.0,\r\n      areaTratada: 12,\r\n      costoTotal: 540.0,\r\n    },\r\n    {\r\n      concepto: \"Insecticida (8 aplicaciones)\",\r\n      costoPorHectarea: 28.5,\r\n      areaTratada: 12,\r\n      costoTotal: 342.0,\r\n    },\r\n    {\r\n      concepto: \"Mano de obra aplicación\",\r\n      costoPorHectarea: 15.0,\r\n      areaTratada: 12,\r\n      costoTotal: 180.0,\r\n    },\r\n    {\r\n      concepto: \"Monitoreo semanal\",\r\n      costoPorHectarea: 8.0,\r\n      areaTratada: 12,\r\n      costoTotal: 96.0,\r\n    },\r\n    {\r\n      concepto: \"Total Inversión\",\r\n      costoPorHectarea: 96.5,\r\n      areaTratada: 12,\r\n      costoTotal: 1158.0,\r\n      isTotal: true,\r\n    },\r\n    {\r\n      concepto: \"Pérdida estimada sin control\",\r\n      costoPorHectarea: 450.0,\r\n      areaTratada: 12,\r\n      costoTotal: 5400.0,\r\n      isLoss: true,\r\n    },\r\n    {\r\n      concepto: \"Ahorro Neto\",\r\n      costoPorHectarea: 353.5,\r\n      areaTratada: 12,\r\n      costoTotal: 4242.0,\r\n      isSaving: true,\r\n    },\r\n  ],\r\n  eficaciaPrograma: [\r\n    {\r\n      metrica: \"Población final de larvas\",\r\n      sinControl: \"15,843\",\r\n      conControl: \"276\",\r\n      reduccion: \"98.3%\",\r\n    },\r\n    {\r\n      metrica: \"Población final de adultos\",\r\n      sinControl: \"4,483\",\r\n      conControl: \"15\",\r\n      reduccion: \"99.7%\",\r\n    },\r\n    {\r\n      metrica: \"Frutos dañados estimados\",\r\n      sinControl: \"1,267\",\r\n      conControl: \"22\",\r\n      reduccion: \"98.3%\",\r\n    },\r\n    {\r\n      metrica: \"Cumplimiento umbral SENASA\",\r\n      sinControl: \"15%\",\r\n      conControl: \"85%\",\r\n      reduccion: \"+70%\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function ReportesPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [mockData, setMockData] = useState<MockData | null>(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => setLoading(false), 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dataString = localStorage.getItem(\"resultadoSimulacion\");\r\n    if (dataString) {\r\n      try {\r\n        const parsed = JSON.parse(dataString) as MockData;\r\n        setMockData(parsed);\r\n        console.log(\r\n          \"Datos del reporte:\",\r\n          typeof mockData?.acumulacionCarpogrados\r\n        );\r\n        // console.log(\"Mock Data de variab:\", mockData);\r\n        console.log(\"Mock Data cargado:\");\r\n      } catch (e) {\r\n        console.error(\"Error al parsear JSON:\", e);\r\n      }\r\n    }\r\n  }, [mockData]);\r\n\r\n  if (!mockData) {\r\n    return (\r\n      <main className=\"container\">\r\n        <p>Cargando datos del reporte...</p>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <div>\r\n        <h1>{typeof mockData}</h1>\r\n      </div>\r\n      <div className=\"header\">\r\n        <Link href=\"/\" className=\"back-button\">\r\n          ← Volver\r\n        </Link>\r\n        <div style={{ textAlign: \"center\", width: \"100%\" }}>\r\n          <h1>Reporte de Simulación - Plaga de Carpocapsa</h1>\r\n          <p>Período de Simulación: 1 de Agosto 2024 - 31 de Marzo 2025</p>\r\n        </div>\r\n        {/* <button className=\"download-button\">📥 Descargar PDF</button> */}\r\n      </div>\r\n\r\n      {/* Gráficos\r\n      <div className=\"charts-grid\">\r\n        <div className=\"chart-card\">\r\n          <div className=\"chart-header\">\r\n            <span className=\"chart-icon red\">📈</span>\r\n            <h3>Costos de Prevención de Plagas</h3>\r\n          </div>\r\n          <div className=\"chart-container\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <LineChart data={chartData.costosPrevencion}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"mes\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"costo\"\r\n                  stroke=\"#ef4444\"\r\n                  strokeWidth={2}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chart-card\">\r\n          <div className=\"chart-header\">\r\n            <span className=\"chart-icon blue\">📈</span>\r\n            <h3>Grados Días</h3>\r\n          </div>\r\n          <div className=\"chart-container\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <LineChart data={chartData.gradosDias}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"fecha\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"grados\"\r\n                  stroke=\"#3b82f6\"\r\n                  strokeWidth={2}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chart-card\">\r\n          <div className=\"chart-header\">\r\n            <span className=\"chart-icon green\">🐛</span>\r\n            <h3>Población de Plagas</h3>\r\n          </div>\r\n          <div className=\"chart-container\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <LineChart data={chartData.poblacionPlagas}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"mes\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"poblacion\"\r\n                  stroke=\"#10b981\"\r\n                  strokeWidth={2}\r\n                  strokeDasharray=\"5 5\"\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chart-card\">\r\n          <div className=\"chart-header\">\r\n            <span className=\"chart-icon purple\">📊</span>\r\n            <h3>Cantidad Atrapada por Trampa</h3>\r\n          </div>\r\n          <div className=\"chart-container\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart data={chartData.cantidadAtrapada}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"trampa\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"cantidad\" fill=\"#8b5cf6\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n\r\n      {/* Tablas */}\r\n      <div className=\"card\">\r\n        <h2>Acumulación de Carpogrados por Mes</h2>\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Mes</th>\r\n                <th>Temp. Min (°C)</th>\r\n                <th>Temp. Max (°C)</th>\r\n                <th>Carpogrados Diarios</th>\r\n                <th>Carpogrados Acumulados</th>\r\n                <th>Días del Mes</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mockData?.acumulacionCarpogrados?.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"bold\">{row.mes}</td>\r\n                  <td>{row.tempMin}</td>\r\n                  <td>{row.tempMax}</td>\r\n                  <td>{row.carpogradosDiarios}</td>\r\n                  <td className=\"bold\">{row.carpogradosAcumulados}</td>\r\n                  <td>{row.diasMes}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <h2>Aplicaciones de Insecticidas</h2>\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Fecha Aplicación</th>\r\n                <th>Generación</th>\r\n                <th>Días Aplicados</th>\r\n                <th>Reducción Esperada (%)</th>\r\n                <th>Población Pre-Tratamiento</th>\r\n                <th>Población Post-Tratamiento</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mockData?.aplicacionInsecticidas?.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"bold\">{row.fechaAplicacion}</td>\r\n                  <td>{row.generacion}</td>\r\n                  <td>{row.diasAplicados}</td>\r\n                  <td>\r\n                    <span className=\"chip\">{row.reduccionEsperada}%</span>\r\n                  </td>\r\n                  <td>{row.poblacionPreTratamiento}</td>\r\n                  <td className=\"success bold\">\r\n                    {row.poblacionPostTratamiento}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <h2>Análisis Económico del Control</h2>\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Concepto</th>\r\n                <th>Costo por Hectárea (USD)</th>\r\n                <th>Área Tratada (ha)</th>\r\n                <th>Costo Total (USD)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mockData?.analisisEconomico?.map((row, index) => (\r\n                <tr\r\n                  key={index}\r\n                  className={\r\n                    row.isTotal\r\n                      ? \"total-row\"\r\n                      : row.isLoss\r\n                      ? \"loss-row\"\r\n                      : row.isSaving\r\n                      ? \"saving-row\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <td className=\"bold\">{row.concepto}</td>\r\n                  <td>${row.costoPorHectarea.toFixed(2)}</td>\r\n                  <td>{row.areaTratada}</td>\r\n                  <td\r\n                    className={`${\r\n                      row.isSaving ? \"success\" : row.isLoss ? \"error\" : \"\"\r\n                    } bold`}\r\n                  >\r\n                    ${row.costoTotal.toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <h2>Eficacia del Programa de Control</h2>\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Métrica</th>\r\n                <th>Sin Control</th>\r\n                <th>Con Control</th>\r\n                <th>Reducción (%)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mockData?.eficaciaPrograma?.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td className=\"bold\">{row.metrica}</td>\r\n                  <td className=\"error\">{row.sinControl}</td>\r\n                  <td className=\"success bold\">{row.conControl}</td>\r\n                  <td>\r\n                    <span className=\"chip\">{row.reduccion}</span>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .container {\r\n          max-width: 1200px;\r\n          margin: 0 auto;\r\n          padding: 2rem;\r\n          background-color: #f5f5f5;\r\n          min-height: 100vh;\r\n        }\r\n        .loading {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          justify-content: center;\r\n          height: 100vh;\r\n        }\r\n        .spinner {\r\n          border: 4px solid rgba(0, 0, 0, 0.1);\r\n          width: 36px;\r\n          height: 36px;\r\n          border-radius: 50%;\r\n          border-left-color: #2e7d32;\r\n          animation: spin 1s linear infinite;\r\n          margin-bottom: 1rem;\r\n        }\r\n        @keyframes spin {\r\n          0% {\r\n            transform: rotate(0deg);\r\n          }\r\n          100% {\r\n            transform: rotate(360deg);\r\n          }\r\n        }\r\n        .header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 2rem;\r\n          flex-wrap: wrap;\r\n          gap: 1rem;\r\n          text-align: center;\r\n        }\r\n        h1 {\r\n          color: #2e7d32;\r\n          margin-bottom: 0.5rem;\r\n          font-size: 2rem;\r\n        }\r\n        .back-button {\r\n          padding: 0.5rem 1rem;\r\n          background: white;\r\n          border: 1px solid #2e7d32;\r\n          color: #2e7d32;\r\n          border-radius: 4px;\r\n          text-decoration: none;\r\n          font-weight: 500;\r\n        }\r\n        .download-button {\r\n          padding: 0.5rem 1rem;\r\n          background: #2e7d32;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-weight: 500;\r\n        }\r\n        .charts-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n          gap: 1.5rem;\r\n          margin-bottom: 2rem;\r\n        }\r\n        .chart-card {\r\n          background: white;\r\n          padding: 1.5rem;\r\n          border-radius: 8px;\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n        }\r\n        .chart-header {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 0.5rem;\r\n          margin-bottom: 1rem;\r\n        }\r\n        .chart-icon {\r\n          font-size: 1.2rem;\r\n        }\r\n        .chart-icon.red {\r\n          color: #ef4444;\r\n        }\r\n        .chart-icon.blue {\r\n          color: #3b82f6;\r\n        }\r\n        .chart-icon.green {\r\n          color: #10b981;\r\n        }\r\n        .chart-icon.purple {\r\n          color: #8b5cf6;\r\n        }\r\n        .chart-container {\r\n          height: 200px;\r\n        }\r\n        h3 {\r\n          margin: 0;\r\n          color: #333;\r\n          font-size: 1.1rem;\r\n        }\r\n        .card {\r\n          background: white;\r\n          padding: 1.5rem;\r\n          border-radius: 8px;\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n          margin-bottom: 2rem;\r\n        }\r\n        h2 {\r\n          margin-top: 0;\r\n          color: #333;\r\n          font-size: 1.5rem;\r\n        }\r\n        .table-container {\r\n          overflow-x: auto;\r\n        }\r\n        table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n        }\r\n        th,\r\n        td {\r\n          padding: 0.75rem;\r\n          text-align: left;\r\n          border-bottom: 1px solid #eee;\r\n        }\r\n        th {\r\n          background-color: #f9f9f9;\r\n          font-weight: 600;\r\n        }\r\n        .bold {\r\n          font-weight: 600;\r\n        }\r\n        .success {\r\n          color: #2e7d32;\r\n        }\r\n        .error {\r\n          color: #d32f2f;\r\n        }\r\n        .chip {\r\n          background-color: #e8f5e9;\r\n          color: #2e7d32;\r\n          padding: 0.25rem 0.5rem;\r\n          border-radius: 16px;\r\n          font-size: 0.875rem;\r\n          font-weight: 500;\r\n        }\r\n        .total-row {\r\n          background-color: #e3f2fd;\r\n        }\r\n        .loss-row {\r\n          background-color: #ffebee;\r\n        }\r\n        .saving-row {\r\n          background-color: #e8f5e8;\r\n        }\r\n        @media (max-width: 768px) {\r\n          .charts-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n          .header {\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n          }\r\n        }\r\n      `}</style>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}